diff -urN /usr/lib/python2.7/site-packages/koji/ssl/SSLConnection.py /usr/lib/python2.7/site-packages/koji-bak/ssl/SSLConnection.py
--- /usr/lib/python2.7/site-packages/koji/ssl/SSLConnection.py	2010-07-09 04:04:26.000000000 +0200
+++ /usr/lib/python2.7/site-packages/koji-bak/ssl/SSLConnection.py	2010-08-02 19:39:00.000000000 +0200
@@ -63,7 +63,7 @@
         c, a = self.__dict__["conn"].accept()
         return (SSLConnection(c), a)
 
-    def makefile(self, mode, bufsize):
+    def makefile(self,  mode='r', bufsize=-1):
         """
         We need to use socket._fileobject Because SSL.Connection
         doesn't have a 'dup'. Not exactly sure WHY this is, but
diff -urN /usr/lib/python2.7/site-packages/koji/ssl/XMLRPCServerProxy.py /usr/lib/python2.7/site-packages/koji-bak/ssl/XMLRPCServerProxy.py
--- /usr/lib/python2.7/site-packages/koji/ssl/XMLRPCServerProxy.py	2010-07-09 04:04:26.000000000 +0200
+++ /usr/lib/python2.7/site-packages/koji-bak/ssl/XMLRPCServerProxy.py	2010-08-02 19:35:04.000000000 +0200
@@ -41,7 +41,7 @@
             # Yay for Python 2.2
             pass
         _host, _port = urllib.splitport(host)
-        self._https = SSLCommon.PlgHTTPS(_host, (_port and int(_port) or 443), ssl_context=self.ssl_ctx, timeout=self._timeout)
+        self._https = SSLCommon.PlgHTTPSConnection(_host, (_port and int(_port) or 443), ssl_context=self.ssl_ctx, timeout=self._timeout)
         return self._https
 
     def close(self):
